{
    "$schema": "https://vega.github.io/schema/vega/v3.0.json",
    "autosize": "pad",
    "padding": 5,
    "height": 200,
    "style": "cell",
    "data": [
        {
            "name": "brush_store"
        },
        {
            "name": "source_0",
            "url": "data/seattle-weather.csv",
            "format": {
                "type": "csv"
            }
        },
        {
            "name": "data_0",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toDate(datum[\"date\"])",
                    "as": "date"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"precipitation\"])",
                    "as": "precipitation"
                },
                {
                    "type": "formula",
                    "as": "month_date",
                    "expr": "datetime(0, month(datum[\"date\"]), 1, 0, 0, 0, 0)"
                },
                {
                    "type": "aggregate",
                    "groupby": [
                        "month_date"
                    ],
                    "ops": [
                        "mean"
                    ],
                    "fields": [
                        "precipitation"
                    ],
                    "as": [
                        "mean_precipitation"
                    ]
                }
            ]
        },
        {
            "name": "data_1",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"precipitation\"])",
                    "as": "precipitation"
                },
                {
                    "type": "formula",
                    "as": "month_date",
                    "expr": "datetime(0, month(datum[\"date\"]), 1, 0, 0, 0, 0)"
                },
                {
                    "type": "filter",
                    "expr": "!(length(data(\"brush_store\"))) || (vlInterval(\"brush_store\", datum))"
                },
                {
                    "type": "aggregate",
                    "groupby": [],
                    "ops": [
                        "mean"
                    ],
                    "fields": [
                        "precipitation"
                    ],
                    "as": [
                        "mean_precipitation"
                    ]
                }
            ]
        }
    ],
    "signals": [
        {
            "name": "x_step",
            "value": 21
        },
        {
            "name": "width",
            "update": "bandspace(domain('x').length, 0.1, 0.05) * x_step"
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "isTuple(group()) ? group() : unit"
                }
            ]
        },
        {
            "name": "brush_x",
            "value": [],
            "on": [
                {
                    "events": {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                            "!event.item || event.item.mark.name !== \"brush_brush\""
                        ]
                    },
                    "update": "[x(unit), x(unit)]"
                },
                {
                    "events": {
                        "source": "window",
                        "type": "mousemove",
                        "consume": true,
                        "between": [
                            {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "!event.item || event.item.mark.name !== \"brush_brush\""
                                ]
                            },
                            {
                                "source": "window",
                                "type": "mouseup"
                            }
                        ]
                    },
                    "update": "[brush_x[0], clamp(x(unit), 0, width)]"
                },
                {
                    "events": {
                        "signal": "brush_scale_trigger"
                    },
                    "update": "[0, 0]"
                },
                {
                    "events": {
                        "signal": "brush_translate_delta"
                    },
                    "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, width)"
                },
                {
                    "events": {
                        "signal": "brush_zoom_delta"
                    },
                    "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, width)"
                }
            ]
        },
        {
            "name": "brush_month_date",
            "on": [
                {
                    "events": {
                        "signal": "brush_x"
                    },
                    "update": "brush_x[0] === brush_x[1] ? null : invert(\"x\", brush_x)"
                }
            ]
        },
        {
            "name": "brush_scale_trigger",
            "update": "(!isArray(brush_month_date) || (invert(\"x\", brush_x)[0] === brush_month_date[0] && invert(\"x\", brush_x)[1] === brush_month_date[1])) ? brush_scale_trigger : {}"
        },
        {
            "name": "brush_tuple",
            "on": [
                {
                    "events": [
                        {
                            "signal": "brush_month_date"
                        }
                    ],
                    "update": "brush_month_date ? {unit: \"layer_0\", intervals: [{encoding: \"x\", field: \"month_date\", extent: brush_month_date}]} : null"
                }
            ]
        },
        {
            "name": "brush_translate_anchor",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mousedown",
                            "markname": "brush_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
                }
            ]
        },
        {
            "name": "brush_translate_delta",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "window",
                            "type": "mousemove",
                            "consume": true,
                            "between": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "markname": "brush_brush"
                                },
                                {
                                    "source": "window",
                                    "type": "mouseup"
                                }
                            ]
                        }
                    ],
                    "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
                }
            ]
        },
        {
            "name": "brush_zoom_anchor",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "brush_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit)}"
                }
            ]
        },
        {
            "name": "brush_zoom_delta",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "brush_brush"
                        }
                    ],
                    "force": true,
                    "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                }
            ]
        },
        {
            "name": "brush_modify",
            "on": [
                {
                    "events": {
                        "signal": "brush_tuple"
                    },
                    "update": "modify(\"brush_store\", brush_tuple, true)"
                }
            ]
        }
    ],
    "marks": [
        {
            "name": "brush_brush_bg",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "#333"
                    },
                    "fillOpacity": {
                        "value": 0.125
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "signal": "brush_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "value": 0
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "signal": "brush_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "field": {
                                "group": "height"
                            }
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        },
        {
            "name": "layer_0_marks",
            "type": "rect",
            "style": [
                "bar"
            ],
            "from": {
                "data": "data_0"
            },
            "encode": {
                "update": {
                    "x": {
                        "scale": "x",
                        "field": "month_date"
                    },
                    "width": {
                        "scale": "x",
                        "band": true
                    },
                    "y": {
                        "scale": "y",
                        "field": "mean_precipitation"
                    },
                    "y2": {
                        "scale": "y",
                        "value": 0
                    },
                    "fill": {
                        "value": "#4c78a8"
                    },
                    "opacity": [
                        {
                            "test": "!(length(data(\"brush_store\"))) || (vlInterval(\"brush_store\", datum))",
                            "value": 1
                        },
                        {
                            "value": 0.7
                        }
                    ]
                }
            }
        },
        {
            "name": "layer_1_marks",
            "type": "rule",
            "style": [
                "rule"
            ],
            "from": {
                "data": "data_1"
            },
            "encode": {
                "update": {
                    "x": {
                        "value": 0
                    },
                    "y": {
                        "scale": "y",
                        "field": "mean_precipitation"
                    },
                    "x2": {
                        "field": {
                            "group": "width"
                        }
                    },
                    "stroke": {
                        "value": "firebrick"
                    },
                    "strokeWidth": {
                        "value": 3
                    }
                }
            }
        },
        {
            "name": "brush_brush",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "transparent"
                    },
                    "stroke": {
                        "value": "white"
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "signal": "brush_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "value": 0
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "signal": "brush_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                            "field": {
                                "group": "height"
                            }
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        }
    ],
    "scales": [
        {
            "name": "x",
            "type": "band",
            "domain": {
                "data": "data_0",
                "field": "month_date",
                "sort": true
            },
            "range": {
                "step": {
                    "signal": "x_step"
                }
            },
            "paddingInner": 0.1,
            "paddingOuter": 0.05
        },
        {
            "name": "y",
            "type": "linear",
            "domain": {
                "fields": [
                    {
                        "data": "data_0",
                        "field": "mean_precipitation"
                    },
                    {
                        "data": "data_1",
                        "field": "mean_precipitation"
                    }
                ],
                "sort": true
            },
            "range": [
                {
                    "signal": "height"
                },
                0
            ],
            "nice": true,
            "zero": true
        }
    ],
    "axes": [
        {
            "scale": "x",
            "orient": "bottom",
            "labelOverlap": true,
            "title": "date (month)",
            "zindex": 1,
            "encode": {
                "labels": {
                    "update": {
                        "text": {
                            "signal": "timeFormat(datum.value, '%b')"
                        },
                        "angle": {
                            "value": 270
                        },
                        "align": {
                            "value": "right"
                        },
                        "baseline": {
                            "value": "middle"
                        }
                    }
                }
            }
        },
        {
            "scale": "y",
            "orient": "left",
            "labelOverlap": true,
            "tickCount": {
                "signal": "ceil(height/40)"
            },
            "title": "Mean of precipitation",
            "zindex": 1
        },
        {
            "scale": "y",
            "orient": "left",
            "domain": false,
            "grid": true,
            "labels": false,
            "maxExtent": 0,
            "minExtent": 0,
            "tickCount": {
                "signal": "ceil(height/40)"
            },
            "ticks": false,
            "zindex": 0,
            "gridScale": "x"
        }
    ],
    "config": {
        "axisY": {
            "minExtent": 30
        }
    }
}
