{
    "$schema": "https://vega.github.io/schema/vega/v3.0.json",
    "autosize": "pad",
    "padding": 5,
    "style": "cell",
    "data": [
        {
            "name": "alex_store"
        },
        {
            "name": "morgan_store"
        },
        {
            "name": "source_0",
            "url": "data/cars.json",
            "format": {
                "type": "json"
            },
            "transform": [
                {
                    "type": "aggregate",
                    "groupby": [
                        "Origin",
                        "Cylinders"
                    ],
                    "ops": [
                        "count"
                    ],
                    "fields": [
                        "*"
                    ],
                    "as": [
                        "count_*"
                    ]
                }
            ]
        }
    ],
    "signals": [
        {
            "name": "x_step",
            "value": 21
        },
        {
            "name": "width",
            "update": "bandspace(domain('x').length, 0.1, 0.05) * x_step"
        },
        {
            "name": "y_step",
            "value": 21
        },
        {
            "name": "height",
            "update": "bandspace(domain('y').length, 0.1, 0.05) * y_step"
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "isTuple(group()) ? group() : unit"
                }
            ]
        },
        {
            "name": "alex_x",
            "value": [],
            "on": [
                {
                    "events": {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                            "!event.shiftKey",
                            "!event.item || event.item.mark.name !== \"alex_brush\""
                        ]
                    },
                    "update": "[x(unit), x(unit)]"
                },
                {
                    "events": {
                        "source": "scope",
                        "type": "mousemove",
                        "between": [
                            {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "!event.shiftKey",
                                    "!event.item || event.item.mark.name !== \"alex_brush\""
                                ]
                            },
                            {
                                "source": "scope",
                                "type": "mouseup"
                            }
                        ]
                    },
                    "update": "[alex_x[0], clamp(x(unit), 0, width)]"
                },
                {
                    "events": {
                        "signal": "alex_scale_trigger"
                    },
                    "update": "[0, 0]"
                },
                {
                    "events": {
                        "signal": "alex_translate_delta"
                    },
                    "update": "clampRange(panLinear(alex_translate_anchor.extent_x, alex_translate_delta.x / span(alex_translate_anchor.extent_x)), 0, width)"
                },
                {
                    "events": {
                        "signal": "alex_zoom_delta"
                    },
                    "update": "clampRange(zoomLinear(alex_x, alex_zoom_anchor.x, alex_zoom_delta), 0, width)"
                }
            ]
        },
        {
            "name": "alex_Cylinders",
            "on": [
                {
                    "events": {
                        "signal": "alex_x"
                    },
                    "update": "alex_x[0] === alex_x[1] ? null : invert(\"x\", alex_x)"
                }
            ]
        },
        {
            "name": "alex_y",
            "value": [],
            "on": [
                {
                    "events": {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                            "!event.shiftKey",
                            "!event.item || event.item.mark.name !== \"alex_brush\""
                        ]
                    },
                    "update": "[y(unit), y(unit)]"
                },
                {
                    "events": {
                        "source": "scope",
                        "type": "mousemove",
                        "between": [
                            {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "!event.shiftKey",
                                    "!event.item || event.item.mark.name !== \"alex_brush\""
                                ]
                            },
                            {
                                "source": "scope",
                                "type": "mouseup"
                            }
                        ]
                    },
                    "update": "[alex_y[0], clamp(y(unit), 0, height)]"
                },
                {
                    "events": {
                        "signal": "alex_scale_trigger"
                    },
                    "update": "[0, 0]"
                },
                {
                    "events": {
                        "signal": "alex_translate_delta"
                    },
                    "update": "clampRange(panLinear(alex_translate_anchor.extent_y, alex_translate_delta.y / span(alex_translate_anchor.extent_y)), 0, height)"
                },
                {
                    "events": {
                        "signal": "alex_zoom_delta"
                    },
                    "update": "clampRange(zoomLinear(alex_y, alex_zoom_anchor.y, alex_zoom_delta), 0, height)"
                }
            ]
        },
        {
            "name": "alex_Origin",
            "on": [
                {
                    "events": {
                        "signal": "alex_y"
                    },
                    "update": "alex_y[0] === alex_y[1] ? null : invert(\"y\", alex_y)"
                }
            ]
        },
        {
            "name": "alex_scale_trigger",
            "update": "(!isArray(alex_Cylinders) || (invert(\"x\", alex_x)[0] === alex_Cylinders[0] && invert(\"x\", alex_x)[1] === alex_Cylinders[1])) && (!isArray(alex_Origin) || (invert(\"y\", alex_y)[0] === alex_Origin[0] && invert(\"y\", alex_y)[1] === alex_Origin[1])) ? alex_scale_trigger : {}"
        },
        {
            "name": "alex_tuple",
            "on": [
                {
                    "events": [
                        {
                            "signal": "alex_Cylinders"
                        },
                        {
                            "signal": "alex_Origin"
                        }
                    ],
                    "update": "alex_Cylinders && alex_Origin ? {unit: \"\", intervals: [{encoding: \"x\", field: \"Cylinders\", extent: alex_Cylinders}, {encoding: \"y\", field: \"Origin\", extent: alex_Origin}]} : null"
                }
            ]
        },
        {
            "name": "alex_translate_anchor",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mousedown",
                            "filter": [
                                "!event.shiftKey"
                            ],
                            "markname": "alex_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit), extent_x: slice(alex_x), extent_y: slice(alex_y)}"
                }
            ]
        },
        {
            "name": "alex_translate_delta",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mousemove",
                            "between": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "!event.shiftKey"
                                    ],
                                    "markname": "alex_brush"
                                },
                                {
                                    "source": "scope",
                                    "type": "mouseup"
                                }
                            ]
                        }
                    ],
                    "update": "{x: alex_translate_anchor.x - x(unit), y: alex_translate_anchor.y - y(unit)}"
                }
            ]
        },
        {
            "name": "alex_zoom_anchor",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "alex_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit)}"
                }
            ]
        },
        {
            "name": "alex_zoom_delta",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "alex_brush"
                        }
                    ],
                    "force": true,
                    "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                }
            ]
        },
        {
            "name": "alex_modify",
            "on": [
                {
                    "events": {
                        "signal": "alex_tuple"
                    },
                    "update": "modify(\"alex_store\", alex_tuple, true)"
                }
            ]
        },
        {
            "name": "morgan_x",
            "value": [],
            "on": [
                {
                    "events": {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                            "event.shiftKey",
                            "!event.item || event.item.mark.name !== \"morgan_brush\""
                        ]
                    },
                    "update": "[x(unit), x(unit)]"
                },
                {
                    "events": {
                        "source": "scope",
                        "type": "mousemove",
                        "between": [
                            {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || event.item.mark.name !== \"morgan_brush\""
                                ]
                            },
                            {
                                "source": "scope",
                                "type": "mouseup"
                            }
                        ]
                    },
                    "update": "[morgan_x[0], clamp(x(unit), 0, width)]"
                },
                {
                    "events": {
                        "signal": "morgan_scale_trigger"
                    },
                    "update": "[0, 0]"
                },
                {
                    "events": {
                        "signal": "morgan_translate_delta"
                    },
                    "update": "clampRange(panLinear(morgan_translate_anchor.extent_x, morgan_translate_delta.x / span(morgan_translate_anchor.extent_x)), 0, width)"
                },
                {
                    "events": {
                        "signal": "morgan_zoom_delta"
                    },
                    "update": "clampRange(zoomLinear(morgan_x, morgan_zoom_anchor.x, morgan_zoom_delta), 0, width)"
                }
            ]
        },
        {
            "name": "morgan_Cylinders",
            "on": [
                {
                    "events": {
                        "signal": "morgan_x"
                    },
                    "update": "morgan_x[0] === morgan_x[1] ? null : invert(\"x\", morgan_x)"
                }
            ]
        },
        {
            "name": "morgan_y",
            "value": [],
            "on": [
                {
                    "events": {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                            "event.shiftKey",
                            "!event.item || event.item.mark.name !== \"morgan_brush\""
                        ]
                    },
                    "update": "[y(unit), y(unit)]"
                },
                {
                    "events": {
                        "source": "scope",
                        "type": "mousemove",
                        "between": [
                            {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || event.item.mark.name !== \"morgan_brush\""
                                ]
                            },
                            {
                                "source": "scope",
                                "type": "mouseup"
                            }
                        ]
                    },
                    "update": "[morgan_y[0], clamp(y(unit), 0, height)]"
                },
                {
                    "events": {
                        "signal": "morgan_scale_trigger"
                    },
                    "update": "[0, 0]"
                },
                {
                    "events": {
                        "signal": "morgan_translate_delta"
                    },
                    "update": "clampRange(panLinear(morgan_translate_anchor.extent_y, morgan_translate_delta.y / span(morgan_translate_anchor.extent_y)), 0, height)"
                },
                {
                    "events": {
                        "signal": "morgan_zoom_delta"
                    },
                    "update": "clampRange(zoomLinear(morgan_y, morgan_zoom_anchor.y, morgan_zoom_delta), 0, height)"
                }
            ]
        },
        {
            "name": "morgan_Origin",
            "on": [
                {
                    "events": {
                        "signal": "morgan_y"
                    },
                    "update": "morgan_y[0] === morgan_y[1] ? null : invert(\"y\", morgan_y)"
                }
            ]
        },
        {
            "name": "morgan_scale_trigger",
            "update": "(!isArray(morgan_Cylinders) || (invert(\"x\", morgan_x)[0] === morgan_Cylinders[0] && invert(\"x\", morgan_x)[1] === morgan_Cylinders[1])) && (!isArray(morgan_Origin) || (invert(\"y\", morgan_y)[0] === morgan_Origin[0] && invert(\"y\", morgan_y)[1] === morgan_Origin[1])) ? morgan_scale_trigger : {}"
        },
        {
            "name": "morgan_tuple",
            "on": [
                {
                    "events": [
                        {
                            "signal": "morgan_Cylinders"
                        },
                        {
                            "signal": "morgan_Origin"
                        }
                    ],
                    "update": "morgan_Cylinders && morgan_Origin ? {unit: \"\", intervals: [{encoding: \"x\", field: \"Cylinders\", extent: morgan_Cylinders}, {encoding: \"y\", field: \"Origin\", extent: morgan_Origin}]} : null"
                }
            ]
        },
        {
            "name": "morgan_translate_anchor",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mousedown",
                            "filter": [
                                "event.shiftKey"
                            ],
                            "markname": "morgan_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit), extent_x: slice(morgan_x), extent_y: slice(morgan_y)}"
                }
            ]
        },
        {
            "name": "morgan_translate_delta",
            "value": {},
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mousemove",
                            "between": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "event.shiftKey"
                                    ],
                                    "markname": "morgan_brush"
                                },
                                {
                                    "source": "scope",
                                    "type": "mouseup"
                                }
                            ]
                        }
                    ],
                    "update": "{x: morgan_translate_anchor.x - x(unit), y: morgan_translate_anchor.y - y(unit)}"
                }
            ]
        },
        {
            "name": "morgan_zoom_anchor",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "morgan_brush"
                        }
                    ],
                    "update": "{x: x(unit), y: y(unit)}"
                }
            ]
        },
        {
            "name": "morgan_zoom_delta",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "wheel",
                            "consume": true,
                            "markname": "morgan_brush"
                        }
                    ],
                    "force": true,
                    "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                }
            ]
        },
        {
            "name": "morgan_modify",
            "on": [
                {
                    "events": {
                        "signal": "morgan_tuple"
                    },
                    "update": "modify(\"morgan_store\", morgan_tuple, true)"
                }
            ]
        }
    ],
    "marks": [
        {
            "name": "morgan_brush_bg",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "#fdbb84"
                    },
                    "fillOpacity": {
                        "value": 0.5
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_y[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_y[1]"
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        },
        {
            "name": "alex_brush_bg",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "#333"
                    },
                    "fillOpacity": {
                        "value": 0.125
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_y[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_y[1]"
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        },
        {
            "name": "marks",
            "type": "rect",
            "style": [
                "rect"
            ],
            "from": {
                "data": "source_0"
            },
            "encode": {
                "update": {
                    "x": {
                        "scale": "x",
                        "field": "Cylinders"
                    },
                    "width": {
                        "scale": "x",
                        "band": true
                    },
                    "y": {
                        "scale": "y",
                        "field": "Origin"
                    },
                    "height": {
                        "scale": "y",
                        "band": true
                    },
                    "fill": [
                        {
                            "test": "!(length(data(\"alex_store\")) || length(data(\"morgan_store\"))) || ((vlInterval(\"alex_store\", datum)) && (vlInterval(\"morgan_store\", datum)))",
                            "scale": "color",
                            "field": "count_*"
                        },
                        {
                            "value": "grey"
                        }
                    ]
                }
            }
        },
        {
            "name": "alex_brush",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "transparent"
                    },
                    "stroke": {
                        "value": "white"
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_y[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"alex_store\").length && data(\"alex_store\")[0].unit === \"\"",
                            "signal": "alex_y[1]"
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        },
        {
            "name": "morgan_brush",
            "type": "rect",
            "clip": true,
            "encode": {
                "enter": {
                    "fill": {
                        "value": "transparent"
                    },
                    "stroke": {
                        "value": "#e34a33"
                    }
                },
                "update": {
                    "x": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_x[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_y[0]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "x2": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_x[1]"
                        },
                        {
                            "value": 0
                        }
                    ],
                    "y2": [
                        {
                            "test": "data(\"morgan_store\").length && data(\"morgan_store\")[0].unit === \"\"",
                            "signal": "morgan_y[1]"
                        },
                        {
                            "value": 0
                        }
                    ]
                }
            }
        }
    ],
    "scales": [
        {
            "name": "x",
            "type": "band",
            "domain": {
                "data": "source_0",
                "field": "Cylinders",
                "sort": true
            },
            "range": {
                "step": {
                    "signal": "x_step"
                }
            },
            "paddingInner": 0.1,
            "paddingOuter": 0.05
        },
        {
            "name": "y",
            "type": "band",
            "domain": {
                "data": "source_0",
                "field": "Origin",
                "sort": true
            },
            "range": {
                "step": {
                    "signal": "y_step"
                }
            },
            "paddingInner": 0.1,
            "paddingOuter": 0.05
        },
        {
            "name": "color",
            "type": "sequential",
            "domain": {
                "data": "source_0",
                "field": "count_*"
            },
            "range": "heatmap",
            "nice": false,
            "zero": false
        }
    ],
    "axes": [
        {
            "scale": "x",
            "orient": "bottom",
            "labelOverlap": true,
            "title": "Cylinders",
            "zindex": 1,
            "encode": {
                "labels": {
                    "update": {
                        "angle": {
                            "value": 270
                        },
                        "align": {
                            "value": "right"
                        },
                        "baseline": {
                            "value": "middle"
                        }
                    }
                }
            }
        },
        {
            "scale": "y",
            "orient": "left",
            "labelOverlap": true,
            "title": "Origin",
            "zindex": 1
        }
    ],
    "legends": [
        {
            "fill": "color",
            "title": "Number of Records",
            "type": "gradient"
        }
    ],
    "config": {
        "axisY": {
            "minExtent": 30
        }
    }
}
