{
    "$schema": "https://vega.github.io/schema/vega/v3.0.json",
    "description": "Anscombe's Quartet",
    "autosize": "pad",
    "padding": 5,
    "data": [
        {
            "name": "brush_store"
        },
        {
            "name": "grid_store"
        },
        {
            "name": "xenc_store"
        },
        {
            "name": "source_0",
            "url": "data/anscombe.json",
            "format": {
                "type": "json",
                "parse": {
                    "X": "number",
                    "Y": "number"
                }
            },
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum[\"X\"] !== null && !isNaN(datum[\"X\"]) && datum[\"Y\"] !== null && !isNaN(datum[\"Y\"])"
                }
            ]
        },
        {
            "name": "column_domain",
            "source": "source_0",
            "transform": [
                {
                    "type": "aggregate",
                    "groupby": [
                        "Series"
                    ]
                }
            ]
        }
    ],
    "signals": [
        {
            "name": "child_width",
            "value": 200
        },
        {
            "name": "child_height",
            "value": 200
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "isTuple(group()) ? group() : unit"
                }
            ]
        },
        {
            "name": "xenc_X",
            "value": "",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mouseover"
                        }
                    ],
                    "update": "datum && item().mark.marktype !== 'group' ? (item().isVoronoi ? datum.datum : datum)[\"X\"] : null"
                }
            ],
            "bind": {
                "input": "number"
            }
        },
        {
            "name": "grid_X"
        },
        {
            "name": "grid_Y"
        },
        {
            "name": "xenc",
            "update": "data(\"xenc_store\").length && {X: data(\"xenc_store\")[0].values[0]}"
        }
    ],
    "layout": {
        "padding": {
            "row": 10,
            "column": 10
        },
        "offset": 10,
        "columns": {
            "signal": "length(data('column_domain'))"
        },
        "bounds": "full",
        "align": "all"
    },
    "marks": [
        {
            "name": "column_title",
            "role": "column-title",
            "type": "group",
            "marks": [
                {
                    "type": "text",
                    "role": "column-title-text",
                    "style": "guide-title",
                    "encode": {
                        "update": {
                            "align": {
                                "value": "center"
                            },
                            "text": {
                                "value": "Series"
                            }
                        }
                    }
                }
            ]
        },
        {
            "name": "row_header",
            "type": "group",
            "role": "row-header",
            "encode": {
                "update": {
                    "height": {
                        "signal": "child_height"
                    }
                }
            },
            "axes": [
                {
                    "scale": "y",
                    "orient": "left",
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(child_height/40)"
                    },
                    "title": "Y",
                    "zindex": 1
                }
            ]
        },
        {
            "name": "column_header",
            "type": "group",
            "role": "column-header",
            "from": {
                "data": "column_domain"
            },
            "sort": {
                "field": "datum[\"Series\"]",
                "order": "ascending"
            },
            "title": {
                "text": {
                    "signal": "''+parent[\"Series\"]"
                },
                "offset": 10,
                "orient": "top",
                "style": "guide-label",
                "encode": {
                    "update": {
                        "fontWeight": {
                            "value": "normal"
                        },
                        "angle": {
                            "value": 0
                        },
                        "fontSize": {
                            "value": 10
                        }
                    }
                }
            },
            "encode": {
                "update": {
                    "width": {
                        "signal": "child_width"
                    }
                }
            }
        },
        {
            "name": "column_footer",
            "type": "group",
            "role": "column-footer",
            "from": {
                "data": "column_domain"
            },
            "sort": {
                "field": "datum[\"Series\"]",
                "order": "ascending"
            },
            "encode": {
                "update": {
                    "width": {
                        "signal": "child_width"
                    }
                }
            },
            "axes": [
                {
                    "scale": "x",
                    "orient": "bottom",
                    "labelFlush": true,
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(child_width/40)"
                    },
                    "title": "X",
                    "zindex": 1
                }
            ]
        },
        {
            "name": "cell",
            "type": "group",
            "style": "cell",
            "from": {
                "facet": {
                    "name": "facet",
                    "data": "source_0",
                    "groupby": [
                        "Series"
                    ]
                }
            },
            "sort": {
                "field": [
                    "datum[\"Series\"]"
                ],
                "order": [
                    "ascending"
                ]
            },
            "encode": {
                "update": {
                    "width": {
                        "signal": "child_width"
                    },
                    "height": {
                        "signal": "child_height"
                    }
                }
            },
            "signals": [
                {
                    "name": "facet",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousemove"
                                }
                            ],
                            "update": "isTuple(facet) ? facet : group(\"cell\").datum"
                        }
                    ]
                },
                {
                    "name": "brush_x",
                    "value": [],
                    "on": [
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || event.item.mark.name !== \"brush_brush\""
                                ]
                            },
                            "update": "[x(unit), x(unit)]"
                        },
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousemove",
                                "between": [
                                    {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "event.shiftKey",
                                            "!event.item || event.item.mark.name !== \"brush_brush\""
                                        ]
                                    },
                                    {
                                        "source": "scope",
                                        "type": "mouseup"
                                    }
                                ]
                            },
                            "update": "[brush_x[0], clamp(x(unit), 0, child_width)]"
                        },
                        {
                            "events": {
                                "signal": "brush_scale_trigger"
                            },
                            "update": "[scale(\"x\", brush_X[0]), scale(\"x\", brush_X[1])]"
                        },
                        {
                            "events": {
                                "signal": "brush_translate_delta"
                            },
                            "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, child_width)"
                        },
                        {
                            "events": {
                                "signal": "brush_zoom_delta"
                            },
                            "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, child_width)"
                        }
                    ]
                },
                {
                    "name": "brush_X",
                    "on": [
                        {
                            "events": {
                                "signal": "brush_x"
                            },
                            "update": "brush_x[0] === brush_x[1] ? null : invert(\"x\", brush_x)"
                        }
                    ]
                },
                {
                    "name": "brush_scale_trigger",
                    "update": "(!isArray(brush_X) || (+invert(\"x\", brush_x)[0] === +brush_X[0] && +invert(\"x\", brush_x)[1] === +brush_X[1])) ? brush_scale_trigger : {}"
                },
                {
                    "name": "brush_tuple",
                    "on": [
                        {
                            "events": [
                                {
                                    "signal": "brush_X"
                                }
                            ],
                            "update": "brush_X ? {unit: \"child\" + '_' + facet[\"Series\"], intervals: [{encoding: \"x\", field: \"X\", extent: brush_X}]} : null"
                        }
                    ]
                },
                {
                    "name": "brush_translate_anchor",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "event.shiftKey"
                                    ],
                                    "markname": "brush_brush"
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
                        }
                    ]
                },
                {
                    "name": "brush_translate_delta",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousemove",
                                    "between": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "filter": [
                                                "event.shiftKey"
                                            ],
                                            "markname": "brush_brush"
                                        },
                                        {
                                            "source": "scope",
                                            "type": "mouseup"
                                        }
                                    ]
                                }
                            ],
                            "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
                        }
                    ]
                },
                {
                    "name": "brush_zoom_anchor",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true,
                                    "markname": "brush_brush"
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit)}"
                        }
                    ]
                },
                {
                    "name": "brush_zoom_delta",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true,
                                    "markname": "brush_brush"
                                }
                            ],
                            "force": true,
                            "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                        }
                    ]
                },
                {
                    "name": "brush_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "brush_tuple"
                            },
                            "update": "modify(\"brush_store\", brush_tuple, {unit: \"child\" + '_' + facet[\"Series\"]})"
                        }
                    ]
                },
                {
                    "name": "grid_X",
                    "on": [
                        {
                            "events": {
                                "signal": "grid_translate_delta"
                            },
                            "update": "panLinear(grid_translate_anchor.extent_x, -grid_translate_delta.x / child_width)"
                        },
                        {
                            "events": {
                                "signal": "grid_zoom_delta"
                            },
                            "update": "zoomLinear(domain(\"x\"), grid_zoom_anchor.x, grid_zoom_delta)"
                        }
                    ],
                    "push": "outer"
                },
                {
                    "name": "grid_Y",
                    "on": [
                        {
                            "events": {
                                "signal": "grid_translate_delta"
                            },
                            "update": "panLinear(grid_translate_anchor.extent_y, grid_translate_delta.y / child_height)"
                        },
                        {
                            "events": {
                                "signal": "grid_zoom_delta"
                            },
                            "update": "zoomLinear(domain(\"y\"), grid_zoom_anchor.y, grid_zoom_delta)"
                        }
                    ],
                    "push": "outer"
                },
                {
                    "name": "grid_tuple",
                    "on": [
                        {
                            "events": [
                                {
                                    "signal": "grid_X"
                                },
                                {
                                    "signal": "grid_Y"
                                }
                            ],
                            "update": "grid_X && grid_Y ? {unit: \"child\" + '_' + facet[\"Series\"], intervals: [{encoding: \"x\", field: \"X\", extent: grid_X}, {encoding: \"y\", field: \"Y\", extent: grid_Y}]} : null"
                        }
                    ]
                },
                {
                    "name": "grid_translate_anchor",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "!event.shiftKey"
                                    ]
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit), extent_x: domain(\"x\"), extent_y: domain(\"y\")}"
                        }
                    ]
                },
                {
                    "name": "grid_translate_delta",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousemove",
                                    "between": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "filter": [
                                                "!event.shiftKey"
                                            ]
                                        },
                                        {
                                            "source": "scope",
                                            "type": "mouseup"
                                        }
                                    ]
                                }
                            ],
                            "update": "{x: grid_translate_anchor.x - x(unit), y: grid_translate_anchor.y - y(unit)}"
                        }
                    ]
                },
                {
                    "name": "grid_zoom_anchor",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true
                                }
                            ],
                            "update": "{x: invert(\"x\", x(unit)), y: invert(\"y\", y(unit))}"
                        }
                    ]
                },
                {
                    "name": "grid_zoom_delta",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true
                                }
                            ],
                            "force": true,
                            "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                        }
                    ]
                },
                {
                    "name": "grid_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "grid_tuple"
                            },
                            "update": "modify(\"grid_store\", grid_tuple, true)"
                        }
                    ]
                },
                {
                    "name": "xenc_tuple",
                    "update": "xenc_X ? {fields: [\"X\"], values: [xenc_X]} : null"
                },
                {
                    "name": "xenc_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "xenc_tuple"
                            },
                            "update": "modify(\"xenc_store\", xenc_tuple, true)"
                        }
                    ]
                }
            ],
            "marks": [
                {
                    "name": "brush_brush_bg",
                    "type": "rect",
                    "clip": true,
                    "encode": {
                        "enter": {
                            "fill": {
                                "value": "#333"
                            },
                            "fillOpacity": {
                                "value": 0.125
                            }
                        },
                        "update": {
                            "x": {
                                "signal": "brush_x[0]"
                            },
                            "y": {
                                "value": 0
                            },
                            "x2": {
                                "signal": "brush_x[1]"
                            },
                            "y2": {
                                "field": {
                                    "group": "height"
                                }
                            }
                        }
                    }
                },
                {
                    "name": "child_marks",
                    "type": "symbol",
                    "clip": true,
                    "style": [
                        "circle"
                    ],
                    "from": {
                        "data": "facet"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "scale": "x",
                                "field": "X"
                            },
                            "y": {
                                "scale": "y",
                                "field": "Y"
                            },
                            "fill": [
                                {
                                    "test": "!(length(data(\"xenc_store\"))) || (vlSingle(\"xenc_store\", datum))",
                                    "value": "red"
                                },
                                {
                                    "value": "steelblue"
                                }
                            ],
                            "size": [
                                {
                                    "test": "!(length(data(\"brush_store\"))) || (vlInterval(\"brush_store\", datum, \"intersect\"))",
                                    "value": 250
                                },
                                {
                                    "value": 100
                                }
                            ],
                            "shape": {
                                "value": "circle"
                            },
                            "opacity": {
                                "value": 1
                            }
                        }
                    }
                },
                {
                    "name": "child_voronoi",
                    "type": "path",
                    "from": {
                        "data": "child_marks"
                    },
                    "encode": {
                        "enter": {
                            "fill": {
                                "value": "transparent"
                            },
                            "strokeWidth": {
                                "value": 0.35
                            },
                            "stroke": {
                                "value": "transparent"
                            },
                            "isVoronoi": {
                                "value": true
                            }
                        }
                    },
                    "transform": [
                        {
                            "type": "voronoi",
                            "x": "datum.x",
                            "y": "datum.y",
                            "size": [
                                {
                                    "signal": "child_width"
                                },
                                {
                                    "signal": "child_height"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "brush_brush",
                    "type": "rect",
                    "clip": true,
                    "encode": {
                        "enter": {
                            "fill": {
                                "value": "transparent"
                            },
                            "stroke": {
                                "value": "white"
                            }
                        },
                        "update": {
                            "x": {
                                "signal": "brush_x[0]"
                            },
                            "y": {
                                "value": 0
                            },
                            "x2": {
                                "signal": "brush_x[1]"
                            },
                            "y2": {
                                "field": {
                                    "group": "height"
                                }
                            }
                        }
                    }
                }
            ],
            "axes": [
                {
                    "scale": "x",
                    "orient": "bottom",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(child_width/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "y"
                },
                {
                    "scale": "y",
                    "orient": "left",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(child_height/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "x"
                }
            ]
        }
    ],
    "scales": [
        {
            "name": "x",
            "type": "linear",
            "domain": {
                "data": "source_0",
                "field": "X"
            },
            "domainRaw": {
                "signal": "grid_X"
            },
            "range": [
                0,
                {
                    "signal": "child_width"
                }
            ],
            "zero": false,
            "nice": true
        },
        {
            "name": "y",
            "type": "linear",
            "domain": {
                "data": "source_0",
                "field": "Y"
            },
            "domainRaw": {
                "signal": "grid_Y"
            },
            "range": [
                {
                    "signal": "child_height"
                },
                0
            ],
            "zero": false,
            "nice": true
        }
    ],
    "config": {
        "axisY": {
            "minExtent": 30
        }
    }
}
