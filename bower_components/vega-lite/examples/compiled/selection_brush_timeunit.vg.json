{
    "$schema": "https://vega.github.io/schema/vega/v3.0.json",
    "autosize": "pad",
    "padding": 5,
    "height": 200,
    "data": [
        {
            "name": "brush_store"
        },
        {
            "name": "source_0",
            "values": [
                {
                    "date": "Sun, 01 Jan 2012 23:00:01",
                    "price": 150
                },
                {
                    "date": "Sun, 02 Jan 2012 00:10:02",
                    "price": 100
                },
                {
                    "date": "Sun, 02 Jan 2012 01:20:03",
                    "price": 170
                },
                {
                    "date": "Sun, 02 Jan 2012 02:30:04",
                    "price": 165
                },
                {
                    "date": "Sun, 02 Jan 2012 03:40:05",
                    "price": 200
                }
            ]
        },
        {
            "name": "data_1",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toDate(datum[\"date\"])",
                    "as": "date"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"price\"])",
                    "as": "price"
                },
                {
                    "type": "formula",
                    "as": "seconds_date",
                    "expr": "datetime(0, 0, 1, 0, 0, seconds(datum[\"date\"]), 0)"
                },
                {
                    "type": "filter",
                    "expr": "datum[\"seconds_date\"] !== null && !isNaN(datum[\"seconds_date\"]) && datum[\"price\"] !== null && !isNaN(datum[\"price\"])"
                }
            ]
        },
        {
            "name": "data_2",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toDate(datum[\"date\"])",
                    "as": "date"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"price\"])",
                    "as": "price"
                },
                {
                    "type": "formula",
                    "as": "seconds_date",
                    "expr": "datetime(0, 0, 1, 0, 0, seconds(datum[\"date\"]), 0)"
                },
                {
                    "type": "filter",
                    "expr": "!(length(data(\"brush_store\"))) || (vlInterval(\"brush_store\", datum))"
                },
                {
                    "type": "formula",
                    "as": "minutes_date",
                    "expr": "datetime(0, 0, 1, 0, minutes(datum[\"date\"]), 0, 0)"
                },
                {
                    "type": "filter",
                    "expr": "datum[\"minutes_date\"] !== null && !isNaN(datum[\"minutes_date\"]) && datum[\"price\"] !== null && !isNaN(datum[\"price\"])"
                }
            ]
        }
    ],
    "signals": [
        {
            "name": "concat_0_width",
            "value": 200
        },
        {
            "name": "concat_1_width",
            "value": 200
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "isTuple(group()) ? group() : unit"
                }
            ]
        }
    ],
    "layout": {
        "padding": {
            "row": 10,
            "column": 10
        },
        "offset": 10,
        "bounds": "full",
        "align": "each"
    },
    "marks": [
        {
            "type": "group",
            "name": "concat_0_group",
            "style": "cell",
            "encode": {
                "update": {
                    "width": {
                        "signal": "concat_0_width"
                    },
                    "height": {
                        "signal": "height"
                    }
                }
            },
            "signals": [
                {
                    "name": "brush_x",
                    "value": [],
                    "on": [
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "!event.item || event.item.mark.name !== \"brush_brush\""
                                ]
                            },
                            "update": "[x(unit), x(unit)]"
                        },
                        {
                            "events": {
                                "source": "window",
                                "type": "mousemove",
                                "consume": true,
                                "between": [
                                    {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "!event.item || event.item.mark.name !== \"brush_brush\""
                                        ]
                                    },
                                    {
                                        "source": "window",
                                        "type": "mouseup"
                                    }
                                ]
                            },
                            "update": "[brush_x[0], clamp(x(unit), 0, concat_0_width)]"
                        },
                        {
                            "events": {
                                "signal": "brush_scale_trigger"
                            },
                            "update": "[scale(\"concat_0_x\", brush_seconds_date[0]), scale(\"concat_0_x\", brush_seconds_date[1])]"
                        },
                        {
                            "events": {
                                "signal": "brush_translate_delta"
                            },
                            "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, concat_0_width)"
                        },
                        {
                            "events": {
                                "signal": "brush_zoom_delta"
                            },
                            "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, concat_0_width)"
                        }
                    ]
                },
                {
                    "name": "brush_seconds_date",
                    "on": [
                        {
                            "events": {
                                "signal": "brush_x"
                            },
                            "update": "brush_x[0] === brush_x[1] ? null : invert(\"concat_0_x\", brush_x)"
                        }
                    ]
                },
                {
                    "name": "brush_scale_trigger",
                    "update": "(!isArray(brush_seconds_date) || (+invert(\"concat_0_x\", brush_x)[0] === +brush_seconds_date[0] && +invert(\"concat_0_x\", brush_x)[1] === +brush_seconds_date[1])) ? brush_scale_trigger : {}"
                },
                {
                    "name": "brush_tuple",
                    "on": [
                        {
                            "events": [
                                {
                                    "signal": "brush_seconds_date"
                                }
                            ],
                            "update": "brush_seconds_date ? {unit: \"concat_0\", intervals: [{encoding: \"x\", field: \"seconds_date\", extent: brush_seconds_date}]} : null"
                        }
                    ]
                },
                {
                    "name": "brush_translate_anchor",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "markname": "brush_brush"
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
                        }
                    ]
                },
                {
                    "name": "brush_translate_delta",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "window",
                                    "type": "mousemove",
                                    "consume": true,
                                    "between": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "markname": "brush_brush"
                                        },
                                        {
                                            "source": "window",
                                            "type": "mouseup"
                                        }
                                    ]
                                }
                            ],
                            "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
                        }
                    ]
                },
                {
                    "name": "brush_zoom_anchor",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true,
                                    "markname": "brush_brush"
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit)}"
                        }
                    ]
                },
                {
                    "name": "brush_zoom_delta",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "consume": true,
                                    "markname": "brush_brush"
                                }
                            ],
                            "force": true,
                            "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                        }
                    ]
                },
                {
                    "name": "brush_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "brush_tuple"
                            },
                            "update": "modify(\"brush_store\", brush_tuple, true)"
                        }
                    ]
                }
            ],
            "marks": [
                {
                    "name": "brush_brush_bg",
                    "type": "rect",
                    "clip": true,
                    "encode": {
                        "enter": {
                            "fill": {
                                "value": "#333"
                            },
                            "fillOpacity": {
                                "value": 0.125
                            }
                        },
                        "update": {
                            "x": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "signal": "brush_x[0]"
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "y": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "value": 0
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "x2": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "signal": "brush_x[1]"
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "y2": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "field": {
                                        "group": "height"
                                    }
                                },
                                {
                                    "value": 0
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "concat_0_marks",
                    "type": "symbol",
                    "style": [
                        "point"
                    ],
                    "from": {
                        "data": "data_1"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "scale": "concat_0_x",
                                "field": "seconds_date"
                            },
                            "y": {
                                "scale": "concat_0_y",
                                "field": "price"
                            },
                            "stroke": [
                                {
                                    "test": "!(length(data(\"brush_store\"))) || (vlInterval(\"brush_store\", datum))",
                                    "value": "goldenrod"
                                },
                                {
                                    "value": "steelblue"
                                }
                            ],
                            "fill": {
                                "value": "transparent"
                            },
                            "opacity": {
                                "value": 0.7
                            }
                        }
                    }
                },
                {
                    "name": "brush_brush",
                    "type": "rect",
                    "clip": true,
                    "encode": {
                        "enter": {
                            "fill": {
                                "value": "transparent"
                            },
                            "stroke": {
                                "value": "white"
                            }
                        },
                        "update": {
                            "x": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "signal": "brush_x[0]"
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "y": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "value": 0
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "x2": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "signal": "brush_x[1]"
                                },
                                {
                                    "value": 0
                                }
                            ],
                            "y2": [
                                {
                                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"concat_0\"",
                                    "field": {
                                        "group": "height"
                                    }
                                },
                                {
                                    "value": 0
                                }
                            ]
                        }
                    }
                }
            ],
            "axes": [
                {
                    "scale": "concat_0_x",
                    "orient": "bottom",
                    "labelFlush": true,
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(concat_0_width/40)"
                    },
                    "title": "date (seconds)",
                    "zindex": 1,
                    "encode": {
                        "labels": {
                            "update": {
                                "text": {
                                    "signal": "timeFormat(datum.value, '%S')"
                                }
                            }
                        }
                    }
                },
                {
                    "scale": "concat_0_x",
                    "orient": "bottom",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(concat_0_width/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "concat_0_y"
                },
                {
                    "scale": "concat_0_y",
                    "orient": "left",
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(height/40)"
                    },
                    "title": "price",
                    "zindex": 1
                },
                {
                    "scale": "concat_0_y",
                    "orient": "left",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(height/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "concat_0_x"
                }
            ]
        },
        {
            "type": "group",
            "name": "concat_1_group",
            "style": "cell",
            "encode": {
                "update": {
                    "width": {
                        "signal": "concat_1_width"
                    },
                    "height": {
                        "signal": "height"
                    }
                }
            },
            "marks": [
                {
                    "name": "concat_1_marks",
                    "type": "symbol",
                    "style": [
                        "point"
                    ],
                    "from": {
                        "data": "data_2"
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "scale": "concat_1_x",
                                "field": "minutes_date"
                            },
                            "y": {
                                "scale": "concat_1_y",
                                "field": "price"
                            },
                            "stroke": {
                                "value": "goldenrod"
                            },
                            "fill": {
                                "value": "transparent"
                            },
                            "opacity": {
                                "value": 0.7
                            }
                        }
                    }
                }
            ],
            "axes": [
                {
                    "scale": "concat_1_x",
                    "orient": "bottom",
                    "labelFlush": true,
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(concat_1_width/40)"
                    },
                    "title": "date (minutes)",
                    "zindex": 1,
                    "encode": {
                        "labels": {
                            "update": {
                                "text": {
                                    "signal": "timeFormat(datum.value, '%M')"
                                }
                            }
                        }
                    }
                },
                {
                    "scale": "concat_1_x",
                    "orient": "bottom",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(concat_1_width/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "concat_1_y"
                },
                {
                    "scale": "concat_1_y",
                    "orient": "left",
                    "labelOverlap": true,
                    "tickCount": {
                        "signal": "ceil(height/40)"
                    },
                    "title": "price",
                    "zindex": 1
                },
                {
                    "scale": "concat_1_y",
                    "orient": "left",
                    "domain": false,
                    "grid": true,
                    "labels": false,
                    "maxExtent": 0,
                    "minExtent": 0,
                    "tickCount": {
                        "signal": "ceil(height/40)"
                    },
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "concat_1_x"
                }
            ]
        }
    ],
    "scales": [
        {
            "name": "concat_0_x",
            "type": "time",
            "domain": {
                "data": "data_1",
                "field": "seconds_date"
            },
            "range": [
                0,
                {
                    "signal": "concat_0_width"
                }
            ]
        },
        {
            "name": "concat_0_y",
            "type": "linear",
            "domain": {
                "data": "data_1",
                "field": "price"
            },
            "range": [
                {
                    "signal": "height"
                },
                0
            ],
            "nice": true,
            "zero": true
        },
        {
            "name": "concat_1_x",
            "type": "time",
            "domain": {
                "data": "data_2",
                "field": "minutes_date"
            },
            "range": [
                0,
                {
                    "signal": "concat_1_width"
                }
            ]
        },
        {
            "name": "concat_1_y",
            "type": "linear",
            "domain": {
                "data": "data_2",
                "field": "price"
            },
            "range": [
                {
                    "signal": "height"
                },
                0
            ],
            "nice": true,
            "zero": true
        }
    ],
    "config": {
        "axisY": {
            "minExtent": 30
        }
    }
}
